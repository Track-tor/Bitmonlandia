using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Bitmonlandia
{
    class Mapa
    {
        /* Terrenos:
         * Vegetacion = V
         * Acuatico = A
         * Desierto = D
         * Nieve = N
         * Volcan = V
         */
        

        private int alto;
        private int ancho;
        private int preset;
        private string[,,] tablero;


        public Mapa(int alto, int ancho, int preset)
        {
            this.alto = alto;
            this.ancho = ancho;
            this.preset = preset;
            if (preset == 1)
            {
                tablero = new string[5, 5, 2] { { {"A","A"}, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } },{ { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } },{ { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } },{ { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } },{ { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } };
            }
            else if (preset == 2)
            {
                tablero = new string[10, 10, 2] { { {"A" , "A"}, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" },{"A" , "A"} }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } };
            }
            else if (preset == 3)
            {
                tablero = new string[15, 15, 2] { { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" },{ "A", "A" } }, { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } , { { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" }, { "A", "A" } } };
            }
            
        }

        public string[,,] GetTablero()
        {
            for (int i = 0; i < ancho; i++)
            {
                for (int j = 0; j < alto; j++)
                {
                    Console.Write(string.Format("{0} ", tablero[i, j,0]));
                }
                Console.Write(Environment.NewLine + Environment.NewLine);
            }
            Console.ReadLine();
            return tablero;
        }


    }
}
